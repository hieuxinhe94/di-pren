//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DIClassLib.ApsisWs {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="Apsis Newsletter Pro APISoap", Namespace="http://api.anp.se/", ConfigurationName="ApsisWs.ApsisNewsletterProAPISoap")]
    public interface ApsisNewsletterProAPISoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSendQueueByNewsletterId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSendQueueByNewsletterId(string strUsername, string strPassword, string strNewsletterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteSendQueueItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSendQueueItem(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetPolls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPolls(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetFilters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFilters(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetDemographicData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDemographicData(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetPollDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPollDetails(string strUsername, string strPassword, string strPollID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetLoginLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLoginLink(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/ResetLoginLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ResetLoginLink(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetBounces", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBounces(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetModules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetModules(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertModule(string strUsername, string strPassword, string strModuleName, string strModuleWidth, string strEditorSize, string strModuleCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateCharacterset", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateCharacterset(string strUsername, string strPassword, string strCharacterset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UploadFileFromFTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UploadFileFromFTP(string strApsisUsername, string strApsisPassword, string strFtpUsername, string strFtpPassword, string strFtpServerIP, string strFilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetRoiResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RoiResult[] GetRoiResults(string strUsername, string strPassword, int intSendQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/MoveSubscriberToOptOutAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MoveSubscriberToOptOutAll(string strUsername, string strPassword, string strEmail, string strReason, string strMailinglistId, string strSendQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteOptOutList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteOptOutList(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteOptOutAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteOptOutAll(string strUsername, string strPassword, string strSubscriberID, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetOptOutList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOptOutList(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetOptOutAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOptOutAll(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetOptOutMailing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetOptOutMailing(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetOptOutAllByDateInterval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OptOutAllResult[] GetOptOutAllByDateInterval(string strUsername, string strPassword, string strIntervalFrom, string strIntervalTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCsvSubscribersFromFileCustom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertCsvSubscribersFromFileCustom(string strUsername, string strPassword, int intMailingListId, string strCSVUrl, char chrDelimiter, char chrQuote, char chrEscape, char chrComment, bool blnHasHeaders);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCSVSubscribersWithDemDataFromFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertCSVSubscribersWithDemDataFromFile(string strUsername, string strPassword, string strMailingListID, string strCSVUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetImportToQueueStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetImportToQueueStatus(string strUsername, string strPassword, int intImportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCSVSubscribersWithDemDataFromFileToQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertCSVSubscribersWithDemDataFromFileToQueue(string strUsername, string strPassword, string strMailingListID, string strCSVUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSMSAccountReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSMSAccountReport(string strUsername, string strPassword, System.DateTime IntervalFrom, System.DateTime IntervalTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertSMS(string strUsername, string strPassword, string strSubject, string strNewsletterName, string strMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSMS(string strUsername, string strPassword, string strSMSId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSMS(string strUsername, string strPassword, string strPhonenumber, string strMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/SendSMSToMailinglist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SendSMSToMailinglist(string strUsername, string strPassword, string strMailingListId, string strDemDataField, string strMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportActivityWithDemographicFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportActivityWithDemographicFields(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportClicks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportClicks(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteReports(string strUsername, string strPassword, string strSendQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportBounces", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportBounces(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReports(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportDetails(string strUsername, string strPassword, string strSendQueueID, string strFilterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportForwards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportForwards(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportViews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportViews(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetReportActivity(string strUsername, string strPassword, string strSendQueueID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetReportLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetReportLink(string strUsername, string strPassword, string strSendQueueID, string strNewsletterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteSubscribersWithoutSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSubscribersWithoutSubscription(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSubscriberDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriberDetails(string strUsername, string strPassword, string strSubscriberID, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSubscriberClicks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriberClicks(string strUsername, string strPassword, string strSubscriberID, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSubscriberViews", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriberViews(string strUsername, string strPassword, string strSubscriberID, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertSubscriber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertSubscriber(string strUsername, string strPassword, string strEmail, string strName, string strFormat, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertSubscription(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCSVSubscriptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertCSVSubscriptions(string strUsername, string strPassword, string strCSVSubscriberID, string strCSVEmail, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCSVSubscribers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertCSVSubscribers(string strUsername, string strPassword, string strMailingListID, string strCSVSubscriberList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCSVSubscribersWithDemData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertCSVSubscribersWithDemData(string strUsername, string strPassword, string strMailingListID, string strCSVData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertCSVSubscribersWithDemDataUpdateOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertCSVSubscribersWithDemDataUpdateOption(string strUsername, string strPassword, string strMailingListID, string strCSVData, int intUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertSubscriberWithDemData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertSubscriberWithDemData(string strUsername, string strPassword, string strMailingListID, string strEmail, string strName, string strFormat, string strDatafields, string strDatavalues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateSubscribersDemDataByFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateSubscribersDemDataByFilter(string strUsername, string strPassword, int intMailingListId, int intFilterId, System.Xml.XmlElement XmlDemDataUpdateFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateSubscriber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateSubscriber(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strName, string strFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateSubscriberData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateSubscriberData(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strDataField, string strDataValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateSubscriberEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateSubscriberEmail(string strUsername, string strPassword, string strCurrentEmail, string strNewEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteSubscriber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSubscriber(string strUsername, string strPassword, string strEmail, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteSubscription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSubscription(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSubscribers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscribers(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSubscriberHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriberHistory(string strUsername, string strPassword, int intSubscriberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/EmptyMailingListById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int EmptyMailingListById(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteSubscriptionsFromMailingList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteSubscriptionsFromMailingList(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSubscriberMailingLists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSubscriberMailingLists(string strUsername, string strPassword, string strSubscriberID, string strEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateMailingList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateMailingList(string strUsername, string strPassword, string strMailingListID, string strListName, string strFromName, string strFromEmail, string strDescription, string strCharacterset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/MailingListExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int MailingListExists(string strUsername, string strPassword, int intMailingListId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertMailingList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertMailingList(string strUsername, string strPassword, string strListName, string strFromName, string strFromEmail, string strDescription, string strCharacterset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetMailingListSubscribers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMailingListSubscribers(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetMailingListDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMailingListDetails(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetMailingLists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetMailingLists(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteMailingList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteMailingList(string strUsername, string strPassword, string strMailingListID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/SaveNewsletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveNewsletter(string strNewsletterId, string strNewsletterType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetNewsletterLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNewsletterLink(string strUsername, string strPassword, string strNewsletterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteNewsletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteNewsletter(string strUsername, string strPassword, string strNewsletterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetNewsletterDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNewsletterDetails(string strUsername, string strPassword, string strNewsletterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertNewsletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertNewsletter(string strUsername, string strPassword, string strNewsletterName, string strSubject, string strTracking, string strBodyHtml, string strBodyText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertTemplateNewsletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertTemplateNewsletter(string strUsername, string strPassword, string strTemplateName, string strNewsletterName, string strSubject, string strTracking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/UpdateNewsletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateNewsletter(string strUsername, string strPassword, string strNewsletterID, string strNewsletterName, string strSubject, string strTracking, string strBodyHtml, string strBodyText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetNewsletters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNewsletters(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/SendNewsletter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SendNewsletter(string strUsername, string strPassword, string strFromEmail, string strFromName, string strNewsletterID, string strMailingListID, string strSendDate, string strSendTime, string strFilterID);
        
        // CODEGEN: Parameter 'datIntervalFrom' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetDetailedNewsletters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DIClassLib.ApsisWs.GetDetailedNewslettersResponse GetDetailedNewsletters(DIClassLib.ApsisWs.GetDetailedNewslettersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetNewsletterFilters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NewsletterFilterResult[] GetNewsletterFilters(string strUsername, string strPassword, int intNewsletterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetNewsletterWebVersionUrlByFilters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNewsletterWebVersionUrlByFilters(string strUsername, string strPassword, int intNewsletterId, int[] intFilterIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetNewsletterWebVersionPdf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNewsletterWebVersionPdf(string strUsername, string strPassword, int intNewsletterId, string strAdditionalStylesheet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertTransaction(string strUsername, string strPassword, string strID, string strIdentifier, string strEmail, string strName, string strFormat, string strSendTime, string strDatafields, string strDatavalues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/TransactionalSend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int TransactionalSend(string strUsername, string strPassword, string strID, string strIdentifier, string strEmail, string strName, string strFormat, string strSendTime, string strDatafields, string strDatavalues, string strXmlData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertTransactionBySubscriberId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertTransactionBySubscriberId(string strUsername, string strPassword, string strID, string strIdentifier, int intSubscriberId, string strSendTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertTransactionWithSplit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertTransactionWithSplit(string strUsername, string strPassword, string strID, string strIdentifier, string strEmail, string strName, string strFormat, string strSendTime, string strDatafields, string strDatavalues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetTransactionProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTransactionProjects(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetTransactionDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTransactionDetails(string strUsername, string strPassword, string strId, string strIdentifier, string strEmail);
        
        // CODEGEN: Parameter 'datIntervalFrom' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetTransactionBouncesByDateInterval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalResponse GetTransactionBouncesByDateInterval(DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteModule(string strUsername, string strPassword, string strModuleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteTemplate(string strUsername, string strPassword, string strTemplateName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/DeleteActiveTemplateModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteActiveTemplateModule(string strUsername, string strPassword, string strActiveTemplateModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetTemplates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTemplates(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetActiveTemplates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetActiveTemplates(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetActiveTemplateModules", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetActiveTemplateModules(string strUsername, string strPassword, string strActiveTemplateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertTemplate(string strUsername, string strPassword, string strTemplateName, string strTemplateRSS, string strTemplateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/InsertActiveTemplateModule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertActiveTemplateModule(string strUsername, string strPassword, string strNewsletterID, string strModuleID, string strModuleCode, string strModuleIndex, string strFilterID, string strHolderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSendQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSendQueue(string strUsername, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.anp.se/GetSendings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSendings(string strUsername, string strPassword, string strNewsletterId, string strStatus);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.anp.se/")]
    public partial class RoiResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string urlField;
        
        private int clicksField;
        
        private int closuresField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Clicks {
            get {
                return this.clicksField;
            }
            set {
                this.clicksField = value;
                this.RaisePropertyChanged("Clicks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Closures {
            get {
                return this.closuresField;
            }
            set {
                this.closuresField = value;
                this.RaisePropertyChanged("Closures");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.anp.se/")]
    public partial class TransactionBounceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string emailField;
        
        private System.DateTime createdField;
        
        private string categoryField;
        
        private string reasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.anp.se/")]
    public partial class NewsletterFilterResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.anp.se/")]
    public partial class DetailedNewsletterResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string subjectField;
        
        private System.DateTime updatedField;
        
        private System.DateTime createdField;
        
        private bool hasNewsletterBeenSentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("Subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
                this.RaisePropertyChanged("Updated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool HasNewsletterBeenSent {
            get {
                return this.hasNewsletterBeenSentField;
            }
            set {
                this.hasNewsletterBeenSentField = value;
                this.RaisePropertyChanged("HasNewsletterBeenSent");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.anp.se/")]
    public partial class OptOutAllResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailField;
        
        private string reasonField;
        
        private int mailingListIdField;
        
        private int sendQueueIdField;
        
        private System.DateTime createdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MailingListId {
            get {
                return this.mailingListIdField;
            }
            set {
                this.mailingListIdField = value;
                this.RaisePropertyChanged("MailingListId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int SendQueueId {
            get {
                return this.sendQueueIdField;
            }
            set {
                this.sendQueueIdField = value;
                this.RaisePropertyChanged("SendQueueId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDetailedNewsletters", WrapperNamespace="http://api.anp.se/", IsWrapped=true)]
    public partial class GetDetailedNewslettersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=0)]
        public string strUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=1)]
        public string strPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datIntervalFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datIntervalTo;
        
        public GetDetailedNewslettersRequest() {
        }
        
        public GetDetailedNewslettersRequest(string strUsername, string strPassword, System.Nullable<System.DateTime> datIntervalFrom, System.Nullable<System.DateTime> datIntervalTo) {
            this.strUsername = strUsername;
            this.strPassword = strPassword;
            this.datIntervalFrom = datIntervalFrom;
            this.datIntervalTo = datIntervalTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDetailedNewslettersResponse", WrapperNamespace="http://api.anp.se/", IsWrapped=true)]
    public partial class GetDetailedNewslettersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=0)]
        public DetailedNewsletterResult[] GetDetailedNewslettersResult;
        
        public GetDetailedNewslettersResponse() {
        }
        
        public GetDetailedNewslettersResponse(DetailedNewsletterResult[] GetDetailedNewslettersResult) {
            this.GetDetailedNewslettersResult = GetDetailedNewslettersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionBouncesByDateInterval", WrapperNamespace="http://api.anp.se/", IsWrapped=true)]
    public partial class GetTransactionBouncesByDateIntervalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=0)]
        public string strUsername;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=1)]
        public string strPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=2)]
        public string strProjectGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datIntervalFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> datIntervalTo;
        
        public GetTransactionBouncesByDateIntervalRequest() {
        }
        
        public GetTransactionBouncesByDateIntervalRequest(string strUsername, string strPassword, string strProjectGuid, System.Nullable<System.DateTime> datIntervalFrom, System.Nullable<System.DateTime> datIntervalTo) {
            this.strUsername = strUsername;
            this.strPassword = strPassword;
            this.strProjectGuid = strProjectGuid;
            this.datIntervalFrom = datIntervalFrom;
            this.datIntervalTo = datIntervalTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionBouncesByDateIntervalResponse", WrapperNamespace="http://api.anp.se/", IsWrapped=true)]
    public partial class GetTransactionBouncesByDateIntervalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.anp.se/", Order=0)]
        public TransactionBounceResult[] GetTransactionBouncesByDateIntervalResult;
        
        public GetTransactionBouncesByDateIntervalResponse() {
        }
        
        public GetTransactionBouncesByDateIntervalResponse(TransactionBounceResult[] GetTransactionBouncesByDateIntervalResult) {
            this.GetTransactionBouncesByDateIntervalResult = GetTransactionBouncesByDateIntervalResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ApsisNewsletterProAPISoapChannel : DIClassLib.ApsisWs.ApsisNewsletterProAPISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApsisNewsletterProAPISoapClient : System.ServiceModel.ClientBase<DIClassLib.ApsisWs.ApsisNewsletterProAPISoap>, DIClassLib.ApsisWs.ApsisNewsletterProAPISoap {
        
        public ApsisNewsletterProAPISoapClient() {
        }
        
        public ApsisNewsletterProAPISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApsisNewsletterProAPISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApsisNewsletterProAPISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApsisNewsletterProAPISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetSendQueueByNewsletterId(string strUsername, string strPassword, string strNewsletterId) {
            return base.Channel.GetSendQueueByNewsletterId(strUsername, strPassword, strNewsletterId);
        }
        
        public int DeleteSendQueueItem(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.DeleteSendQueueItem(strUsername, strPassword, strSendQueueID);
        }
        
        public System.Data.DataSet GetPolls(string strUsername, string strPassword) {
            return base.Channel.GetPolls(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetFilters(string strUsername, string strPassword) {
            return base.Channel.GetFilters(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetDemographicData(string strUsername, string strPassword) {
            return base.Channel.GetDemographicData(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetPollDetails(string strUsername, string strPassword, string strPollID) {
            return base.Channel.GetPollDetails(strUsername, strPassword, strPollID);
        }
        
        public string GetLoginLink(string strUsername, string strPassword) {
            return base.Channel.GetLoginLink(strUsername, strPassword);
        }
        
        public string ResetLoginLink(string strUsername, string strPassword) {
            return base.Channel.ResetLoginLink(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetBounces(string strUsername, string strPassword) {
            return base.Channel.GetBounces(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetModules(string strUsername, string strPassword) {
            return base.Channel.GetModules(strUsername, strPassword);
        }
        
        public int InsertModule(string strUsername, string strPassword, string strModuleName, string strModuleWidth, string strEditorSize, string strModuleCode) {
            return base.Channel.InsertModule(strUsername, strPassword, strModuleName, strModuleWidth, strEditorSize, strModuleCode);
        }
        
        public int UpdateCharacterset(string strUsername, string strPassword, string strCharacterset) {
            return base.Channel.UpdateCharacterset(strUsername, strPassword, strCharacterset);
        }
        
        public string UploadFileFromFTP(string strApsisUsername, string strApsisPassword, string strFtpUsername, string strFtpPassword, string strFtpServerIP, string strFilename) {
            return base.Channel.UploadFileFromFTP(strApsisUsername, strApsisPassword, strFtpUsername, strFtpPassword, strFtpServerIP, strFilename);
        }
        
        public RoiResult[] GetRoiResults(string strUsername, string strPassword, int intSendQueueId) {
            return base.Channel.GetRoiResults(strUsername, strPassword, intSendQueueId);
        }
        
        public int MoveSubscriberToOptOutAll(string strUsername, string strPassword, string strEmail, string strReason, string strMailinglistId, string strSendQueueId) {
            return base.Channel.MoveSubscriberToOptOutAll(strUsername, strPassword, strEmail, strReason, strMailinglistId, strSendQueueId);
        }
        
        public int DeleteOptOutList(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strMailingListID) {
            return base.Channel.DeleteOptOutList(strUsername, strPassword, strSubscriberID, strEmail, strMailingListID);
        }
        
        public int DeleteOptOutAll(string strUsername, string strPassword, string strSubscriberID, string strEmail) {
            return base.Channel.DeleteOptOutAll(strUsername, strPassword, strSubscriberID, strEmail);
        }
        
        public System.Data.DataSet GetOptOutList(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.GetOptOutList(strUsername, strPassword, strMailingListID);
        }
        
        public System.Data.DataSet GetOptOutAll(string strUsername, string strPassword) {
            return base.Channel.GetOptOutAll(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetOptOutMailing(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetOptOutMailing(strUsername, strPassword, strSendQueueID);
        }
        
        public OptOutAllResult[] GetOptOutAllByDateInterval(string strUsername, string strPassword, string strIntervalFrom, string strIntervalTo) {
            return base.Channel.GetOptOutAllByDateInterval(strUsername, strPassword, strIntervalFrom, strIntervalTo);
        }
        
        public int InsertCsvSubscribersFromFileCustom(string strUsername, string strPassword, int intMailingListId, string strCSVUrl, char chrDelimiter, char chrQuote, char chrEscape, char chrComment, bool blnHasHeaders) {
            return base.Channel.InsertCsvSubscribersFromFileCustom(strUsername, strPassword, intMailingListId, strCSVUrl, chrDelimiter, chrQuote, chrEscape, chrComment, blnHasHeaders);
        }
        
        public int InsertCSVSubscribersWithDemDataFromFile(string strUsername, string strPassword, string strMailingListID, string strCSVUrl) {
            return base.Channel.InsertCSVSubscribersWithDemDataFromFile(strUsername, strPassword, strMailingListID, strCSVUrl);
        }
        
        public System.Data.DataSet GetImportToQueueStatus(string strUsername, string strPassword, int intImportId) {
            return base.Channel.GetImportToQueueStatus(strUsername, strPassword, intImportId);
        }
        
        public int InsertCSVSubscribersWithDemDataFromFileToQueue(string strUsername, string strPassword, string strMailingListID, string strCSVUrl) {
            return base.Channel.InsertCSVSubscribersWithDemDataFromFileToQueue(strUsername, strPassword, strMailingListID, strCSVUrl);
        }
        
        public System.Data.DataSet GetSMSAccountReport(string strUsername, string strPassword, System.DateTime IntervalFrom, System.DateTime IntervalTo) {
            return base.Channel.GetSMSAccountReport(strUsername, strPassword, IntervalFrom, IntervalTo);
        }
        
        public int InsertSMS(string strUsername, string strPassword, string strSubject, string strNewsletterName, string strMessage) {
            return base.Channel.InsertSMS(strUsername, strPassword, strSubject, strNewsletterName, strMessage);
        }
        
        public int DeleteSMS(string strUsername, string strPassword, string strSMSId) {
            return base.Channel.DeleteSMS(strUsername, strPassword, strSMSId);
        }
        
        public string SendSMS(string strUsername, string strPassword, string strPhonenumber, string strMessage) {
            return base.Channel.SendSMS(strUsername, strPassword, strPhonenumber, strMessage);
        }
        
        public int SendSMSToMailinglist(string strUsername, string strPassword, string strMailingListId, string strDemDataField, string strMessage) {
            return base.Channel.SendSMSToMailinglist(strUsername, strPassword, strMailingListId, strDemDataField, strMessage);
        }
        
        public System.Data.DataSet GetReportActivityWithDemographicFields(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetReportActivityWithDemographicFields(strUsername, strPassword, strSendQueueID);
        }
        
        public System.Data.DataSet GetReportClicks(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetReportClicks(strUsername, strPassword, strSendQueueID);
        }
        
        public int DeleteReports(string strUsername, string strPassword, string strSendQueueId) {
            return base.Channel.DeleteReports(strUsername, strPassword, strSendQueueId);
        }
        
        public System.Data.DataSet GetReportBounces(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetReportBounces(strUsername, strPassword, strSendQueueID);
        }
        
        public System.Data.DataSet GetReports(string strUsername, string strPassword) {
            return base.Channel.GetReports(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetReportDetails(string strUsername, string strPassword, string strSendQueueID, string strFilterID) {
            return base.Channel.GetReportDetails(strUsername, strPassword, strSendQueueID, strFilterID);
        }
        
        public System.Data.DataSet GetReportForwards(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetReportForwards(strUsername, strPassword, strSendQueueID);
        }
        
        public System.Data.DataSet GetReportViews(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetReportViews(strUsername, strPassword, strSendQueueID);
        }
        
        public System.Data.DataSet GetReportActivity(string strUsername, string strPassword, string strSendQueueID) {
            return base.Channel.GetReportActivity(strUsername, strPassword, strSendQueueID);
        }
        
        public string GetReportLink(string strUsername, string strPassword, string strSendQueueID, string strNewsletterID) {
            return base.Channel.GetReportLink(strUsername, strPassword, strSendQueueID, strNewsletterID);
        }
        
        public int DeleteSubscribersWithoutSubscription(string strUsername, string strPassword) {
            return base.Channel.DeleteSubscribersWithoutSubscription(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetSubscriberDetails(string strUsername, string strPassword, string strSubscriberID, string strEmail) {
            return base.Channel.GetSubscriberDetails(strUsername, strPassword, strSubscriberID, strEmail);
        }
        
        public System.Data.DataSet GetSubscriberClicks(string strUsername, string strPassword, string strSubscriberID, string strEmail) {
            return base.Channel.GetSubscriberClicks(strUsername, strPassword, strSubscriberID, strEmail);
        }
        
        public System.Data.DataSet GetSubscriberViews(string strUsername, string strPassword, string strSubscriberID, string strEmail) {
            return base.Channel.GetSubscriberViews(strUsername, strPassword, strSubscriberID, strEmail);
        }
        
        public int InsertSubscriber(string strUsername, string strPassword, string strEmail, string strName, string strFormat, string strMailingListID) {
            return base.Channel.InsertSubscriber(strUsername, strPassword, strEmail, strName, strFormat, strMailingListID);
        }
        
        public int InsertSubscription(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strMailingListID) {
            return base.Channel.InsertSubscription(strUsername, strPassword, strSubscriberID, strEmail, strMailingListID);
        }
        
        public int InsertCSVSubscriptions(string strUsername, string strPassword, string strCSVSubscriberID, string strCSVEmail, string strMailingListID) {
            return base.Channel.InsertCSVSubscriptions(strUsername, strPassword, strCSVSubscriberID, strCSVEmail, strMailingListID);
        }
        
        public string InsertCSVSubscribers(string strUsername, string strPassword, string strMailingListID, string strCSVSubscriberList) {
            return base.Channel.InsertCSVSubscribers(strUsername, strPassword, strMailingListID, strCSVSubscriberList);
        }
        
        public int InsertCSVSubscribersWithDemData(string strUsername, string strPassword, string strMailingListID, string strCSVData) {
            return base.Channel.InsertCSVSubscribersWithDemData(strUsername, strPassword, strMailingListID, strCSVData);
        }
        
        public int InsertCSVSubscribersWithDemDataUpdateOption(string strUsername, string strPassword, string strMailingListID, string strCSVData, int intUpdate) {
            return base.Channel.InsertCSVSubscribersWithDemDataUpdateOption(strUsername, strPassword, strMailingListID, strCSVData, intUpdate);
        }
        
        public int InsertSubscriberWithDemData(string strUsername, string strPassword, string strMailingListID, string strEmail, string strName, string strFormat, string strDatafields, string strDatavalues) {
            return base.Channel.InsertSubscriberWithDemData(strUsername, strPassword, strMailingListID, strEmail, strName, strFormat, strDatafields, strDatavalues);
        }
        
        public int UpdateSubscribersDemDataByFilter(string strUsername, string strPassword, int intMailingListId, int intFilterId, System.Xml.XmlElement XmlDemDataUpdateFields) {
            return base.Channel.UpdateSubscribersDemDataByFilter(strUsername, strPassword, intMailingListId, intFilterId, XmlDemDataUpdateFields);
        }
        
        public int UpdateSubscriber(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strName, string strFormat) {
            return base.Channel.UpdateSubscriber(strUsername, strPassword, strSubscriberID, strEmail, strName, strFormat);
        }
        
        public int UpdateSubscriberData(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strDataField, string strDataValue) {
            return base.Channel.UpdateSubscriberData(strUsername, strPassword, strSubscriberID, strEmail, strDataField, strDataValue);
        }
        
        public int UpdateSubscriberEmail(string strUsername, string strPassword, string strCurrentEmail, string strNewEmail) {
            return base.Channel.UpdateSubscriberEmail(strUsername, strPassword, strCurrentEmail, strNewEmail);
        }
        
        public int DeleteSubscriber(string strUsername, string strPassword, string strEmail, string strMailingListID) {
            return base.Channel.DeleteSubscriber(strUsername, strPassword, strEmail, strMailingListID);
        }
        
        public int DeleteSubscription(string strUsername, string strPassword, string strSubscriberID, string strEmail, string strMailingListID) {
            return base.Channel.DeleteSubscription(strUsername, strPassword, strSubscriberID, strEmail, strMailingListID);
        }
        
        public System.Data.DataSet GetSubscribers(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.GetSubscribers(strUsername, strPassword, strMailingListID);
        }
        
        public System.Data.DataSet GetSubscriberHistory(string strUsername, string strPassword, int intSubscriberId) {
            return base.Channel.GetSubscriberHistory(strUsername, strPassword, intSubscriberId);
        }
        
        public int EmptyMailingListById(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.EmptyMailingListById(strUsername, strPassword, strMailingListID);
        }
        
        public int DeleteSubscriptionsFromMailingList(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.DeleteSubscriptionsFromMailingList(strUsername, strPassword, strMailingListID);
        }
        
        public System.Data.DataSet GetSubscriberMailingLists(string strUsername, string strPassword, string strSubscriberID, string strEmail) {
            return base.Channel.GetSubscriberMailingLists(strUsername, strPassword, strSubscriberID, strEmail);
        }
        
        public int UpdateMailingList(string strUsername, string strPassword, string strMailingListID, string strListName, string strFromName, string strFromEmail, string strDescription, string strCharacterset) {
            return base.Channel.UpdateMailingList(strUsername, strPassword, strMailingListID, strListName, strFromName, strFromEmail, strDescription, strCharacterset);
        }
        
        public int MailingListExists(string strUsername, string strPassword, int intMailingListId) {
            return base.Channel.MailingListExists(strUsername, strPassword, intMailingListId);
        }
        
        public int InsertMailingList(string strUsername, string strPassword, string strListName, string strFromName, string strFromEmail, string strDescription, string strCharacterset) {
            return base.Channel.InsertMailingList(strUsername, strPassword, strListName, strFromName, strFromEmail, strDescription, strCharacterset);
        }
        
        public System.Data.DataSet GetMailingListSubscribers(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.GetMailingListSubscribers(strUsername, strPassword, strMailingListID);
        }
        
        public System.Data.DataSet GetMailingListDetails(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.GetMailingListDetails(strUsername, strPassword, strMailingListID);
        }
        
        public System.Data.DataSet GetMailingLists(string strUsername, string strPassword) {
            return base.Channel.GetMailingLists(strUsername, strPassword);
        }
        
        public int DeleteMailingList(string strUsername, string strPassword, string strMailingListID) {
            return base.Channel.DeleteMailingList(strUsername, strPassword, strMailingListID);
        }
        
        public int SaveNewsletter(string strNewsletterId, string strNewsletterType) {
            return base.Channel.SaveNewsletter(strNewsletterId, strNewsletterType);
        }
        
        public string GetNewsletterLink(string strUsername, string strPassword, string strNewsletterID) {
            return base.Channel.GetNewsletterLink(strUsername, strPassword, strNewsletterID);
        }
        
        public int DeleteNewsletter(string strUsername, string strPassword, string strNewsletterID) {
            return base.Channel.DeleteNewsletter(strUsername, strPassword, strNewsletterID);
        }
        
        public System.Data.DataSet GetNewsletterDetails(string strUsername, string strPassword, string strNewsletterID) {
            return base.Channel.GetNewsletterDetails(strUsername, strPassword, strNewsletterID);
        }
        
        public int InsertNewsletter(string strUsername, string strPassword, string strNewsletterName, string strSubject, string strTracking, string strBodyHtml, string strBodyText) {
            return base.Channel.InsertNewsletter(strUsername, strPassword, strNewsletterName, strSubject, strTracking, strBodyHtml, strBodyText);
        }
        
        public int InsertTemplateNewsletter(string strUsername, string strPassword, string strTemplateName, string strNewsletterName, string strSubject, string strTracking) {
            return base.Channel.InsertTemplateNewsletter(strUsername, strPassword, strTemplateName, strNewsletterName, strSubject, strTracking);
        }
        
        public int UpdateNewsletter(string strUsername, string strPassword, string strNewsletterID, string strNewsletterName, string strSubject, string strTracking, string strBodyHtml, string strBodyText) {
            return base.Channel.UpdateNewsletter(strUsername, strPassword, strNewsletterID, strNewsletterName, strSubject, strTracking, strBodyHtml, strBodyText);
        }
        
        public System.Data.DataSet GetNewsletters(string strUsername, string strPassword) {
            return base.Channel.GetNewsletters(strUsername, strPassword);
        }
        
        public int SendNewsletter(string strUsername, string strPassword, string strFromEmail, string strFromName, string strNewsletterID, string strMailingListID, string strSendDate, string strSendTime, string strFilterID) {
            return base.Channel.SendNewsletter(strUsername, strPassword, strFromEmail, strFromName, strNewsletterID, strMailingListID, strSendDate, strSendTime, strFilterID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DIClassLib.ApsisWs.GetDetailedNewslettersResponse DIClassLib.ApsisWs.ApsisNewsletterProAPISoap.GetDetailedNewsletters(DIClassLib.ApsisWs.GetDetailedNewslettersRequest request) {
            return base.Channel.GetDetailedNewsletters(request);
        }
        
        public DetailedNewsletterResult[] GetDetailedNewsletters(string strUsername, string strPassword, System.Nullable<System.DateTime> datIntervalFrom, System.Nullable<System.DateTime> datIntervalTo) {
            DIClassLib.ApsisWs.GetDetailedNewslettersRequest inValue = new DIClassLib.ApsisWs.GetDetailedNewslettersRequest();
            inValue.strUsername = strUsername;
            inValue.strPassword = strPassword;
            inValue.datIntervalFrom = datIntervalFrom;
            inValue.datIntervalTo = datIntervalTo;
            DIClassLib.ApsisWs.GetDetailedNewslettersResponse retVal = ((DIClassLib.ApsisWs.ApsisNewsletterProAPISoap)(this)).GetDetailedNewsletters(inValue);
            return retVal.GetDetailedNewslettersResult;
        }
        
        public NewsletterFilterResult[] GetNewsletterFilters(string strUsername, string strPassword, int intNewsletterId) {
            return base.Channel.GetNewsletterFilters(strUsername, strPassword, intNewsletterId);
        }
        
        public string GetNewsletterWebVersionUrlByFilters(string strUsername, string strPassword, int intNewsletterId, int[] intFilterIds) {
            return base.Channel.GetNewsletterWebVersionUrlByFilters(strUsername, strPassword, intNewsletterId, intFilterIds);
        }
        
        public string GetNewsletterWebVersionPdf(string strUsername, string strPassword, int intNewsletterId, string strAdditionalStylesheet) {
            return base.Channel.GetNewsletterWebVersionPdf(strUsername, strPassword, intNewsletterId, strAdditionalStylesheet);
        }
        
        public int InsertTransaction(string strUsername, string strPassword, string strID, string strIdentifier, string strEmail, string strName, string strFormat, string strSendTime, string strDatafields, string strDatavalues) {
            return base.Channel.InsertTransaction(strUsername, strPassword, strID, strIdentifier, strEmail, strName, strFormat, strSendTime, strDatafields, strDatavalues);
        }
        
        public int TransactionalSend(string strUsername, string strPassword, string strID, string strIdentifier, string strEmail, string strName, string strFormat, string strSendTime, string strDatafields, string strDatavalues, string strXmlData) {
            return base.Channel.TransactionalSend(strUsername, strPassword, strID, strIdentifier, strEmail, strName, strFormat, strSendTime, strDatafields, strDatavalues, strXmlData);
        }
        
        public int InsertTransactionBySubscriberId(string strUsername, string strPassword, string strID, string strIdentifier, int intSubscriberId, string strSendTime) {
            return base.Channel.InsertTransactionBySubscriberId(strUsername, strPassword, strID, strIdentifier, intSubscriberId, strSendTime);
        }
        
        public int InsertTransactionWithSplit(string strUsername, string strPassword, string strID, string strIdentifier, string strEmail, string strName, string strFormat, string strSendTime, string strDatafields, string strDatavalues) {
            return base.Channel.InsertTransactionWithSplit(strUsername, strPassword, strID, strIdentifier, strEmail, strName, strFormat, strSendTime, strDatafields, strDatavalues);
        }
        
        public System.Data.DataSet GetTransactionProjects(string strUsername, string strPassword) {
            return base.Channel.GetTransactionProjects(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetTransactionDetails(string strUsername, string strPassword, string strId, string strIdentifier, string strEmail) {
            return base.Channel.GetTransactionDetails(strUsername, strPassword, strId, strIdentifier, strEmail);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalResponse DIClassLib.ApsisWs.ApsisNewsletterProAPISoap.GetTransactionBouncesByDateInterval(DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalRequest request) {
            return base.Channel.GetTransactionBouncesByDateInterval(request);
        }
        
        public TransactionBounceResult[] GetTransactionBouncesByDateInterval(string strUsername, string strPassword, string strProjectGuid, System.Nullable<System.DateTime> datIntervalFrom, System.Nullable<System.DateTime> datIntervalTo) {
            DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalRequest inValue = new DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalRequest();
            inValue.strUsername = strUsername;
            inValue.strPassword = strPassword;
            inValue.strProjectGuid = strProjectGuid;
            inValue.datIntervalFrom = datIntervalFrom;
            inValue.datIntervalTo = datIntervalTo;
            DIClassLib.ApsisWs.GetTransactionBouncesByDateIntervalResponse retVal = ((DIClassLib.ApsisWs.ApsisNewsletterProAPISoap)(this)).GetTransactionBouncesByDateInterval(inValue);
            return retVal.GetTransactionBouncesByDateIntervalResult;
        }
        
        public int DeleteModule(string strUsername, string strPassword, string strModuleName) {
            return base.Channel.DeleteModule(strUsername, strPassword, strModuleName);
        }
        
        public int DeleteTemplate(string strUsername, string strPassword, string strTemplateName) {
            return base.Channel.DeleteTemplate(strUsername, strPassword, strTemplateName);
        }
        
        public int DeleteActiveTemplateModule(string strUsername, string strPassword, string strActiveTemplateModuleID) {
            return base.Channel.DeleteActiveTemplateModule(strUsername, strPassword, strActiveTemplateModuleID);
        }
        
        public System.Data.DataSet GetTemplates(string strUsername, string strPassword) {
            return base.Channel.GetTemplates(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetActiveTemplates(string strUsername, string strPassword) {
            return base.Channel.GetActiveTemplates(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetActiveTemplateModules(string strUsername, string strPassword, string strActiveTemplateID) {
            return base.Channel.GetActiveTemplateModules(strUsername, strPassword, strActiveTemplateID);
        }
        
        public int InsertTemplate(string strUsername, string strPassword, string strTemplateName, string strTemplateRSS, string strTemplateCode) {
            return base.Channel.InsertTemplate(strUsername, strPassword, strTemplateName, strTemplateRSS, strTemplateCode);
        }
        
        public int InsertActiveTemplateModule(string strUsername, string strPassword, string strNewsletterID, string strModuleID, string strModuleCode, string strModuleIndex, string strFilterID, string strHolderID) {
            return base.Channel.InsertActiveTemplateModule(strUsername, strPassword, strNewsletterID, strModuleID, strModuleCode, strModuleIndex, strFilterID, strHolderID);
        }
        
        public System.Data.DataSet GetSendQueue(string strUsername, string strPassword) {
            return base.Channel.GetSendQueue(strUsername, strPassword);
        }
        
        public System.Data.DataSet GetSendings(string strUsername, string strPassword, string strNewsletterId, string strStatus) {
            return base.Channel.GetSendings(strUsername, strPassword, strNewsletterId, strStatus);
        }
    }
}
