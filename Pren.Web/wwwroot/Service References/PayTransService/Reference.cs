//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pren.Web.PayTransService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.dagensindustri.se/", ConfigurationName="PayTransService.PayTransSoap")]
    public interface PayTransSoap {
        
        // CODEGEN: Generating message contract since element name accessToken from namespace http://ws.dagensindustri.se/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.dagensindustri.se/InsertPayTrans", ReplyAction="*")]
        Pren.Web.PayTransService.InsertPayTransResponse InsertPayTrans(Pren.Web.PayTransService.InsertPayTransRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.dagensindustri.se/InsertPayTrans", ReplyAction="*")]
        System.Threading.Tasks.Task<Pren.Web.PayTransService.InsertPayTransResponse> InsertPayTransAsync(Pren.Web.PayTransService.InsertPayTransRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertPayTransRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertPayTrans", Namespace="http://ws.dagensindustri.se/", Order=0)]
        public Pren.Web.PayTransService.InsertPayTransRequestBody Body;
        
        public InsertPayTransRequest() {
        }
        
        public InsertPayTransRequest(Pren.Web.PayTransService.InsertPayTransRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ws.dagensindustri.se/")]
    public partial class InsertPayTransRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string accessToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int diPayTransRefNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int merchantId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string currency;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int amountInOren;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int vatInOren;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string paymentMethod;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.DateTime purchaseDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string goodsDescription;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string comment;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string consumerName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string email;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string cardType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string transactionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string status;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string statusCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.DateTime finishDate;
        
        public InsertPayTransRequestBody() {
        }
        
        public InsertPayTransRequestBody(
                    string accessToken, 
                    int diPayTransRefNo, 
                    int merchantId, 
                    string currency, 
                    int amountInOren, 
                    int vatInOren, 
                    string paymentMethod, 
                    System.DateTime purchaseDate, 
                    string goodsDescription, 
                    string comment, 
                    string consumerName, 
                    string email, 
                    string cardType, 
                    string transactionId, 
                    string status, 
                    string statusCode, 
                    System.DateTime finishDate) {
            this.accessToken = accessToken;
            this.diPayTransRefNo = diPayTransRefNo;
            this.merchantId = merchantId;
            this.currency = currency;
            this.amountInOren = amountInOren;
            this.vatInOren = vatInOren;
            this.paymentMethod = paymentMethod;
            this.purchaseDate = purchaseDate;
            this.goodsDescription = goodsDescription;
            this.comment = comment;
            this.consumerName = consumerName;
            this.email = email;
            this.cardType = cardType;
            this.transactionId = transactionId;
            this.status = status;
            this.statusCode = statusCode;
            this.finishDate = finishDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertPayTransResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertPayTransResponse", Namespace="http://ws.dagensindustri.se/", Order=0)]
        public Pren.Web.PayTransService.InsertPayTransResponseBody Body;
        
        public InsertPayTransResponse() {
        }
        
        public InsertPayTransResponse(Pren.Web.PayTransService.InsertPayTransResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://ws.dagensindustri.se/")]
    public partial class InsertPayTransResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool InsertPayTransResult;
        
        public InsertPayTransResponseBody() {
        }
        
        public InsertPayTransResponseBody(bool InsertPayTransResult) {
            this.InsertPayTransResult = InsertPayTransResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PayTransSoapChannel : Pren.Web.PayTransService.PayTransSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayTransSoapClient : System.ServiceModel.ClientBase<Pren.Web.PayTransService.PayTransSoap>, Pren.Web.PayTransService.PayTransSoap {
        
        public PayTransSoapClient() {
        }
        
        public PayTransSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayTransSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayTransSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayTransSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Pren.Web.PayTransService.InsertPayTransResponse Pren.Web.PayTransService.PayTransSoap.InsertPayTrans(Pren.Web.PayTransService.InsertPayTransRequest request) {
            return base.Channel.InsertPayTrans(request);
        }
        
        public bool InsertPayTrans(
                    string accessToken, 
                    int diPayTransRefNo, 
                    int merchantId, 
                    string currency, 
                    int amountInOren, 
                    int vatInOren, 
                    string paymentMethod, 
                    System.DateTime purchaseDate, 
                    string goodsDescription, 
                    string comment, 
                    string consumerName, 
                    string email, 
                    string cardType, 
                    string transactionId, 
                    string status, 
                    string statusCode, 
                    System.DateTime finishDate) {
            Pren.Web.PayTransService.InsertPayTransRequest inValue = new Pren.Web.PayTransService.InsertPayTransRequest();
            inValue.Body = new Pren.Web.PayTransService.InsertPayTransRequestBody();
            inValue.Body.accessToken = accessToken;
            inValue.Body.diPayTransRefNo = diPayTransRefNo;
            inValue.Body.merchantId = merchantId;
            inValue.Body.currency = currency;
            inValue.Body.amountInOren = amountInOren;
            inValue.Body.vatInOren = vatInOren;
            inValue.Body.paymentMethod = paymentMethod;
            inValue.Body.purchaseDate = purchaseDate;
            inValue.Body.goodsDescription = goodsDescription;
            inValue.Body.comment = comment;
            inValue.Body.consumerName = consumerName;
            inValue.Body.email = email;
            inValue.Body.cardType = cardType;
            inValue.Body.transactionId = transactionId;
            inValue.Body.status = status;
            inValue.Body.statusCode = statusCode;
            inValue.Body.finishDate = finishDate;
            Pren.Web.PayTransService.InsertPayTransResponse retVal = ((Pren.Web.PayTransService.PayTransSoap)(this)).InsertPayTrans(inValue);
            return retVal.Body.InsertPayTransResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Pren.Web.PayTransService.InsertPayTransResponse> Pren.Web.PayTransService.PayTransSoap.InsertPayTransAsync(Pren.Web.PayTransService.InsertPayTransRequest request) {
            return base.Channel.InsertPayTransAsync(request);
        }
        
        public System.Threading.Tasks.Task<Pren.Web.PayTransService.InsertPayTransResponse> InsertPayTransAsync(
                    string accessToken, 
                    int diPayTransRefNo, 
                    int merchantId, 
                    string currency, 
                    int amountInOren, 
                    int vatInOren, 
                    string paymentMethod, 
                    System.DateTime purchaseDate, 
                    string goodsDescription, 
                    string comment, 
                    string consumerName, 
                    string email, 
                    string cardType, 
                    string transactionId, 
                    string status, 
                    string statusCode, 
                    System.DateTime finishDate) {
            Pren.Web.PayTransService.InsertPayTransRequest inValue = new Pren.Web.PayTransService.InsertPayTransRequest();
            inValue.Body = new Pren.Web.PayTransService.InsertPayTransRequestBody();
            inValue.Body.accessToken = accessToken;
            inValue.Body.diPayTransRefNo = diPayTransRefNo;
            inValue.Body.merchantId = merchantId;
            inValue.Body.currency = currency;
            inValue.Body.amountInOren = amountInOren;
            inValue.Body.vatInOren = vatInOren;
            inValue.Body.paymentMethod = paymentMethod;
            inValue.Body.purchaseDate = purchaseDate;
            inValue.Body.goodsDescription = goodsDescription;
            inValue.Body.comment = comment;
            inValue.Body.consumerName = consumerName;
            inValue.Body.email = email;
            inValue.Body.cardType = cardType;
            inValue.Body.transactionId = transactionId;
            inValue.Body.status = status;
            inValue.Body.statusCode = statusCode;
            inValue.Body.finishDate = finishDate;
            return ((Pren.Web.PayTransService.PayTransSoap)(this)).InsertPayTransAsync(inValue);
        }
    }
}
